apiVersion: v1
kind: Namespace
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
  name: cert-manager
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: external-dns
    env: prod
  name: external-dns
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: ingress-nginx
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-apiserver-ca: "true"
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook
webhooks:
- clientConfig:
    service:
      name: kubernetes
      namespace: default
      path: /apis/webhook.cert-manager.io/v1beta1/mutations
  failurePolicy: Fail
  name: webhook.cert-manager.io
  rules:
  - apiGroups:
    - cert-manager.io
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - certificates
    - issuers
    - clusterissuers
    - orders
    - challenges
    - certificaterequests
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager
  namespace: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector
  namespace: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook
  namespace: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: external-dns
    env: prod
  name: external-dns
  namespace: external-dns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-role
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader-nginx
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector:leaderelection
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager:leaderelection
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: cert-manager-edit
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: cert-manager-view
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook:webhook-requester
rules:
- apiGroups:
  - admission.cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  - clusterissuers
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - create
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-certificates
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificates/status
  - certificaterequests
  - certificaterequests/status
  verbs:
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - clusterissuers
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/finalizers
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-challenges
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - challenges/status
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-clusterissuers
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - clusterissuers/status
  verbs:
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-ingress-shim
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  verbs:
  - create
  - update
  - delete
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-issuers
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - issuers/status
  verbs:
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-orders
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - orders/status
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - challenges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - create
  - delete
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: external-dns
    env: prod
  name: external-dns
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-role-nisa-binding
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
- kind: ServiceAccount
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector:leaderelection
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-cainjector:leaderelection
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cert-manager-cainjector
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook:webhook-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cert-manager-webhook
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager:leaderelection
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager:leaderelection
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-cainjector
subjects:
- kind: ServiceAccount
  name: cert-manager-cainjector
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-certificates
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-certificates
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-challenges
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-challenges
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-clusterissuers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-clusterissuers
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-ingress-shim
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-ingress-shim
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-issuers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-issuers
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-controller-orders
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-controller-orders
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-leaderelection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-leaderelection
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: cert-manager-webhook
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: external-dns
    env: prod
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
- kind: ServiceAccount
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-configuration
  namespace: ingress-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: tcp-services
  namespace: ingress-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: udp-services
  namespace: ingress-nginx
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager
  namespace: cert-manager
spec:
  ports:
  - port: 9402
    protocol: TCP
    targetPort: 9402
  selector:
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook
  namespace: cert-manager
spec:
  ports:
  - name: https
    port: 443
    targetPort: 6443
  selector:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/part-of: cert-manager
      env: prod
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9402"
        prometheus.io/scrape: "true"
        seriousben.com/repo: https://github.com/seriousben/serious-core
      labels:
        app: cert-manager
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/part-of: cert-manager
        env: prod
        helm.sh/chart: cert-manager-v0.11.0
    spec:
      containers:
      - args:
        - --v=2
        - --cluster-resource-namespace=$(POD_NAMESPACE)
        - --leader-election-namespace=kube-system
        - --webhook-namespace=$(POD_NAMESPACE)
        - --webhook-ca-secret=cert-manager-webhook-ca
        - --webhook-serving-secret=cert-manager-webhook-tls
        - --webhook-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/jetstack/cert-manager-controller:v0.11.0
        imagePullPolicy: IfNotPresent
        name: cert-manager
        ports:
        - containerPort: 9402
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
      serviceAccountName: cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cainjector-v0.11.0
  name: cert-manager-cainjector
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/part-of: cert-manager
      env: prod
  template:
    metadata:
      annotations:
        seriousben.com/repo: https://github.com/seriousben/serious-core
      labels:
        app: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/part-of: cert-manager
        env: prod
        helm.sh/chart: cainjector-v0.11.0
    spec:
      containers:
      - args:
        - --v=2
        - --leader-election-namespace=kube-system
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/jetstack/cert-manager-cainjector:v0.11.0
        imagePullPolicy: IfNotPresent
        name: cainjector
        resources: {}
      serviceAccountName: cert-manager-cainjector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/part-of: cert-manager
      env: prod
  template:
    metadata:
      annotations:
        seriousben.com/repo: https://github.com/seriousben/serious-core
      labels:
        app: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/part-of: cert-manager
        env: prod
        helm.sh/chart: cert-manager-v0.11.0
    spec:
      containers:
      - args:
        - --v=2
        - --secure-port=6443
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/jetstack/cert-manager-webhook:v0.11.0
        imagePullPolicy: IfNotPresent
        name: cert-manager
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: certs
      serviceAccountName: cert-manager-webhook
      volumes:
      - name: certs
        secret:
          secretName: cert-manager-webhook-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    env: prod
  name: nginx-ingress-controller
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      env: prod
  template:
    metadata:
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
        seriousben.com/repo: https://github.com/seriousben/serious-core
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        env: prod
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-configuration
        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx
        - --annotations-prefix=nginx.ingress.kubernetes.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 33
      serviceAccountName: nginx-ingress-serviceaccount
      terminationGracePeriodSeconds: 300
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/part-of: external-dns
    env: prod
  name: external-dns
  namespace: external-dns
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/part-of: external-dns
      env: prod
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        seriousben.com/repo: https://github.com/seriousben/serious-core
      labels:
        app: external-dns
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/part-of: external-dns
        env: prod
    spec:
      containers:
      - args:
        - --source=ingress
        - --domain-filter=seriousben.com
        - --provider=google
        - --google-project=projects-seriousben
        - --registry=txt
        - --txt-owner-id=seriousben
        image: registry.opensource.zalan.do/teapot/external-dns:v0.5.17
        name: external-dns
      serviceAccountName: external-dns
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  annotations:
    cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-tls
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: v1beta1.webhook.cert-manager.io
spec:
  group: webhook.cert-manager.io
  groupPriorityMinimum: 1000
  service:
    name: cert-manager-webhook
    namespace: cert-manager
  version: v1beta1
  versionPriority: 15
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
  name: letsencrypt
spec:
  acme:
    email: boudreau.benjamin@gmail.com
    privateKeySecretRef:
      name: letsencrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  annotations:
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
  name: letsencrypt-staging
spec:
  acme:
    email: boudreau.benjamin@gmail.com
    privateKeySecretRef:
      name: letsencrypt-staging
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
      selector: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-apiserver-ca: "true"
    seriousben.com/repo: https://github.com/seriousben/serious-core
  labels:
    app: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/part-of: cert-manager
    env: prod
    helm.sh/chart: cert-manager-v0.11.0
  name: cert-manager-webhook
webhooks:
- clientConfig:
    service:
      name: kubernetes
      namespace: default
      path: /apis/webhook.cert-manager.io/v1beta1/validations
  failurePolicy: Fail
  name: webhook.cert-manager.io
  namespaceSelector:
    matchExpressions:
    - key: cert-manager.io/disable-validation
      operator: NotIn
      values:
      - "true"
    - key: name
      operator: NotIn
      values:
      - cert-manager
  rules:
  - apiGroups:
    - cert-manager.io
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - certificates
    - issuers
    - clusterissuers
    - certificaterequests
  sideEffects: None
